# Offense count: 1
Lint/SuppressedException:
  Exclude:
    - 'config/unicorn.rb'

# Offense count: 251
Metrics/AbcSize:
  Max: 116

# Offense count: 11
# Configuration parameters: CountBlocks.
Metrics/BlockNesting:
  Max: 5

# Offense count: 69
Metrics/CyclomaticComplexity:
  Max: 36

# Offense count: 224
# Configuration parameters: CountComments, ExcludedMethods.
Metrics/MethodLength:
  Max: 123

# Offense count: 68
Metrics/PerceivedComplexity:
  Max: 44

# Offense count: 266
Style/Documentation:
  Enabled: false

# Offense count: 49
# Configuration parameters: MinBodyLength.
Style/GuardClause:
  Enabled: false

AllCops:
  TargetRubyVersion: 2.7
  Exclude:
    - 'db/**/*.rb'

# This is utterly retarded.
Bundler/OrderedGems:
  Enabled: false

# We need these.
Style/GlobalVars:
  AllowedVariables:
    - "$flipper"
    - "$redis"
    - "$themes"

# STYLE DECISIONS
# Let us line things up
Layout/ArgumentAlignment:
  # TODO: EnforcedStyle: with_fixed_indentation
  Enabled: false

Layout/HashAlignment:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# We really don't care about this.
Lint/AmbiguousRegexpLiteral:
  Enabled: false

# Try to avoid excessive indentation.
Layout/EndAlignment:
  AutoCorrect: true
  EnforcedStyleAlignWith: variable

# YAEIA
Layout/CaseIndentation:
  EnforcedStyle: end

# We do not care about potential inheritance issues with these
Style/ClassVars:
  Enabled: false

# Consistency is better than brevity.
Style/EmptyMethod:
  EnforcedStyle: expanded

# More excessive indentation avoided.
Layout/FirstArrayElementIndentation:
  EnforcedStyle: consistent

# Even more.
Layout/FirstHashElementIndentation:
  EnforcedStyle: consistent

# We should be able to comment things out, dammit
Layout/CommentIndentation:
  Enabled: false

Layout/LeadingCommentSpace:
  Enabled: false

# Lambda styles are bizarrely inconsistent. Let's just make them all stabby.
Style/Lambda:
  EnforcedStyle: literal

# `extend self` is slightly more readable
Style/ModuleFunction:
  EnforcedStyle: extend_self

# `unless` just muddies the logic; only ever use it in modifier form.
Style/NegatedIf:
  Enabled: false

# This is both faster and clearer.
Style/NumericPredicate:
  AutoCorrect: true
  EnforcedStyle: comparison

# e's aren't good
Naming/RescuedExceptionsVariableName:
  PreferredName: ex

# Screw %r.
Style/RegexpLiteral:
  AllowInnerSlashes: true
  EnforcedStyle: slashes

# `rescue` as a modifier is an ugly kludge, but it's better than the block form in 90% of cases.
Style/RescueModifier:
  Enabled: false

# &. should only be used where needed
Style/SafeNavigation:
  Enabled: false

# Sometimes code is clearer with multiple expressions on one line.
Style/Semicolon:
  Enabled: false

# This is just silly.
Naming/VariableNumber:
  Enabled: false

# Doesn't really help things
Style/SymbolArray:
  EnforcedStyle: brackets

# We use one for modules and one for classes, Rubocop treats them the same
Style/ClassAndModuleChildren:
  Enabled: false

# This does not matter and it's useful to show example Unicode in comments
Style/AsciiComments:
  Enabled: false
# End style decisions

# Loosen metrics
Metrics/ClassLength:
  Max: 700

Metrics/BlockLength:
  Max: 400

Metrics/LineLength:
  Max: 300

Metrics/ModuleLength:
  Max: 250

Metrics/ParameterLists:
  Max: 7

# fp
Naming/MethodParameterName:
  AllowedNames: io, id, to, by, on, in, at, ip, db, fp

# Broken in rubocop 0.73
Layout/EmptyLinesAroundAccessModifier:
  Enabled: false

Lint/UselessAccessModifier:
  Enabled: false
